%!PS-Adobe-3.0
%%Creator: cairo 1.14.8 (http://cairographics.org)
%%CreationDate: Wed Jan 25 23:10:16 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 19x3mm 53 9 0 () ()
%%BoundingBox: 0 -1 54 9
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 19x3mm
%%PageBoundingBox: 0 -1 54 9
54 9 cairo_set_page_size
%%EndPageSetup
q 0 -1 54 10 rectclip q
0 g
0.648 1.544 m 0 0.016 l 53.336 0.001 l 53.336 1.544 l h
0.648 1.544 m f
0.477635 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 8.719439 cm
1.133 6.207 m 3.027 6.207 l 5.465 1.523 l 7.875 6.184 l 9.48 6.184 l 11.84
 1.637 l 12.25 1.637 l 12.25 6.188 l 14 6.188 l 14 0.223 l 10.562 0.223 
l 8.676 4.129 l 6.777 0.223 l 4.258 0.223 l h
1.133 6.207 m S Q
0.47033 w
q 1 0 0 -1 0 8.719439 cm
14.895 6.203 m 16.676 6.203 l 16.676 1.711 l 17.012 1.711 l 19.328 6.18
 l 20.84 6.18 l 23.141 1.695 l 23.492 1.695 l 23.492 6.207 l 25.293 6.207
 l 25.293 0.223 l 21.891 0.223 l 20.082 4.082 l 18.234 0.223 l 14.895 0.223
 l h
14.895 6.203 m S Q
0.467874 w
q 1 0 0 -1 0 8.719439 cm
40.617 6.211 m 42.445 6.211 l 44.801 1.559 l 47.129 6.188 l 48.68 6.188
 l 50.957 1.668 l 51.352 1.668 l 51.352 6.191 l 53.047 6.191 l 53.047 0.227
 l 49.723 0.227 l 47.902 4.145 l 46.066 0.223 l 43.633 0.223 l h
40.617 6.211 m S Q
26.133 8.68 m 26.133 2.333 l 32.359 2.356 l 34.449 2.469 34.465 3.641 34.527
 5.259 c 34.543 5.79 34.547 6.317 34.465 6.794 c 36.656 2.368 l 39.637 2.368
 l 42.73 8.618 l 40.617 8.618 l 38.348 3.903 l 37.984 3.903 l 35.676 8.641
 l 33.551 8.641 l 33.82 8.102 l 33.434 8.446 32.848 8.665 31.961 8.68 c 
h
31.375 7.059 m 32.703 7.055 32.602 6.286 32.609 5.356 c 32.578 4.555 32.621
 3.938 31.457 3.93 c 28.055 3.919 l 28.055 7.059 l 31.242 7.059 l 31.285
 7.059 31.332 7.059 31.375 7.059 c h
31.375 7.059 m f*
Q Q
showpage
%%Trailer
%%EOF
